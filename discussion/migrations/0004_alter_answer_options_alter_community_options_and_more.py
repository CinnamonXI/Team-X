# Generated by Django 4.1.7 on 2023-04-06 04:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_alter_faq_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('discussion', '0003_alter_community_slug_alter_group_slug_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='answer',
            options={'ordering': ('-created_at',)},
        ),
        migrations.AlterModelOptions(
            name='community',
            options={'ordering': ('-created_at',), 'verbose_name': 'Communities'},
        ),
        migrations.AlterModelOptions(
            name='group',
            options={'ordering': ('-created_at',)},
        ),
        migrations.AlterModelOptions(
            name='question',
            options={'ordering': ('-created_at',)},
        ),
        migrations.AddField(
            model_name='question',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.category'),
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.tag'),
        ),
        migrations.AlterField(
            model_name='community',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='community',
            name='followers',
            field=models.ManyToManyField(blank=True, related_name='followed_communities', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='group',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='joined_groups', to=settings.AUTH_USER_MODEL),
        ),
    ]
